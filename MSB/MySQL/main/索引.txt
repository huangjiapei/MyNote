1、索引使用规则、索引的优化
（1）索引约束
      	a）单表索引最好控制在5个以内（前缀索引）
	b）索引长度最好不要太长

（2）知道哪些情况适合创建索引
	a）唯一性比较好的字段，比如用户名
	b）频繁使用distinct字段
	c）为经常需要排序、分组和联合操作的字段建立索引
	d）select语句中，频繁作为where条件的字段
	e）delete、update语句中，where条件字段

（3）知道哪些情况不适合创建索引
	a）有大量重复的字段
	b）where条件用不到的字段
	b）频繁更新的字段

（4）明确索引失效的情况，避免索引失效

2、慢查询的解决方案
（1）Explain
        主要看有没有走索引，以及消耗时间

（2）让MySQL记录下超过指定时间的查询语句，我们将超过指定时间的SQL语句查询称为“慢查询”
        a）慢查询体现：CPU、内存消耗过高、服务器压力陡然过大
        b）开启慢查询：
	set long_query_time=1;//慢查询的时间
	set global slow_query_log='ON'//log文件

3、慢查询的优化
（1）索引优化（见1）

（2）SQL本身优化
 	a）尽量全值匹配
	b）利用最左匹配原则
	c）使用覆盖索引

	d）范围条件放最后面
	e）不等于要慎用
	f）like当心
	g）字符类型加引号

（3）反范式设计优化
        为了性能和读取效率得考虑，而适当得对数据库设计范式得要求进行违反	。
        允许存在少量得冗余，换句话来说反范式化就是使用空间来换取时间。

	第一范式：列不可分
	第二范式：列直接依赖主键
	第三范式：列必须依赖主键，不能依赖外键或者非主键，不能传递依赖。

（4）服务器硬件
         设置mysql参数：连接属性connection、缓存大小cache等等

4、命令
（1）性能监控
        show profile for query（上下文切换、cpu等等）

（2）查看锁
        show engineer innodb status

（3）查看连接
        show processlist

（4）explain执行计划